#
# plugin language settings
#
plugin.name=KuroBase
plugin.start=[[[ 鯖が起動しました ]]]
plugin.test=[[[ テスト鯖が起動しました(開発者テスト中) ]]]

plugin.loaded=プラグインのロードが完了しました
plugin.unloaded=プラグインのアンロードが完了しました

plugin.setup.language=言語設定中
plugin.setup.directory=ディレクトリ設定中
plugin.setup.settings=設定ロード中
plugin.setup.command=コマンド登録中
plugin.setup.event=イベント登録中
plugin.setup.database=データベース設定中
plugin.setup.table=データベーステーブルチェック中
plugin.setup.task=タスク起動中
plugin.setup.worlddata=ワールドデータチェック中
plugin.setup.protectdata=エリア保護データセットアップ中

plugin.unloaded.database=データベースクローズ中

plugin.shutdown=プラグインロード中にエラーが発生したため、シャットダウンします
plugin.db.connect=データベース接続
plugin.db.disconnect=データベース切断
plugin.db.error=データベースエラー

plugin.console.error=コンソールでは実行できないコマンドです
plugin.player.error=コンソールでしか実行できないコマンドです
plugin.args.error=コマンド指定が間違っています

plugin.information=アプデ情報等はこちら [ http://kuro.host/ ] ←Click!で開くよ
plugin.information.discord=http://kuro.host/

plugin.kick.afk=長時間放置自動キック

plugin.bucket.error=バケツの使用は管理権限以上です

death.MESSAGE_NORMAL=< %sさんが 死亡！ [死因: %s ] >
death.MESSAGE_ATTACK=< %sさんが 死亡！ [死因: %s 殺害者: %s ｱｲﾃﾑ: %s ] >
death.BLOCK_EXPLOSION=爆発
death.CONTACT=サボテン
death.CRAMMING=混雑
death.CUSTOM=カスタム
death.DRAGON_BREATH=ドラゴン火炎
death.DROWNING=窒息
death.DRYOUT=水中
death.ENTITY_ATTACK=攻撃
death.ENTITY_EXPLOSION=爆発
death.ENTITY_SWEEP_ATTACK=スイープ攻撃
death.FALL=落下
death.FALLING_BLOCK=落石
death.FIRE=火炎
death.FIRE_TICK=やけど
death.FLY_INTO_WALL=衝突
death.HOT_FLOOR=マグマ
death.LAVA=溶岩暴露
death.LIGHTNING=落雷
death.MAGIC=ポーション
death.MELTING=雪だるま
death.POISON=毒作用
death.PROJECTILE=射的
death.STARVATION=空腹
death.SUFFOCATION=ブロック
death.SUICIDE=自殺
death.THORNS=エンチャント
death.VOID=空洞落下
death.WITHER=ウィザーポーション

commands.error.len=文字の長さが指定範囲内ではありません
commands.error.hankaku=半角英数ではありません
commands.error.update=データ更新に失敗しました
commands.error.rank=このコマンドを実行する権限がありません

commands.name.error.dupli=指定された名前は既に使用されているか、エラーが発生しています
commands.name.msg.success=新しいニックネームが設定されました
commands.name.msg.deleted=ニックネーム設定をクリアしました
commands.tag.msg.success=新しいタグが設定されました
commands.tag.msg.deleted=タグ設定をクリアしました

commands.chest.lock.perm=チェストロックを実行する条件が足りません
commands.chest.lock.perm.rank=(整地・建築回数が[%s回]を超えないといけない)
commands.chest.lock.perm.other=このチェストは別の方が管理しているチェストです
commands.chest.lock.lock=このチェストをロックしました
commands.chest.lock.unlock=このチェストをアンロックしました
commands.chest.lock.modeoff=チェストロックモードが [ OFF ] になりました。
commands.chest.lock.modeon=チェストロックモードが [ ON ] になりました。ロックしたいチェストを開いてください

commands.price.error.itemnone=メインハンドにアイテムを持って実行してください
commands.price.error.price=価格設定値が規定範囲外です
commands.price.success=アイテムの価格が設定されました

commands.info.message=↑↑↑上記のURLから情報を閲覧できます
commands.map.message=↑↑↑上記のURLからマップを閲覧できます

commands.blockid.modeoff=ブロック情報表示モードが [ OFF ] になりました。
commands.blockid.modeon=ブロック情報表示モードが [ ON ] になりました。情報を見たいブロックをクリックしてください

commands.pay.notfound=指定されたプレイヤーが見つかりませんでした
commands.pay.numerror=指定された金額は無効です
commands.pay.monerror=所持金が足りません
commands.pay.fail=支払処理に失敗しました

commands.rand.numerror=指定された数字は無効です

commands.ri.success=インベントリ内のアイテムを消去しました

commands.area.action.error=指定できるアクションは add か del だけです
commands.area.name.error=指定できる名前は3～16文字までです
commands.area.modeoff=エリア保護指定モードが [ OFF ] になりました。
commands.area.modeon=エリア保護指定モードが [ ON ] になりました。対角線上の2点を設定してください（1マス:2p）
commands.area.delete.error=エリア保護の削除に失敗しました
commands.area.regist.error=エリア保護の登録に失敗しました
commands.area.minimum.error=エリアの保護は最低512マス(8x8x8)必要です

shop.title=123鯖ショップ [左ｸﾘ：買う 右ｸﾘ：売る]
shop.title.buy=買値
shop.title.sell=売値
shop.title.pageprev=前ページ
shop.title.pagenext=次ページ
shop.error.shortage=所持金が足りません
shop.buy.success=[ %s を %s個 購入!! 所持金： %s p ]
shop.buy.fail=支払処理に失敗しました
shop.sell.success=[ %s を %s個 売却!! 売却金額: %s p -> 所持金： %s p ]
shop.sell.fail=売却処理に失敗しました
shop.sell.none=指定のアイテムは所持していません
shop.perm=ショップ機能を実行する条件が足りません

SQL.LOAD.UPDATE.PLAYER=UPDATE player SET status=''

SQL.CREATE.PLAYER=CREATE TABLE IF NOT EXISTS player (uuid character varying(64) NOT NULL, name character varying(32) NOT NULL, rank integer NOT NULL, money integer NOT NULL, nickname character varying(32), tag character varying(32), com character varying(128), ip character varying(128), host character varying(128), rip character varying(128), rhost character varying(128), totalexp integer, exp double precision, exptolevel integer, level integer, world character varying(32), x double precision, y double precision, z double precision, login integer, break integer, place integer, kill integer, death integer, kick integer, chat integer, cmd integer, play_time integer, status character varying(16), last timestamp without time zone, add_date timestamp without time zone NOT NULL, upd_date timestamp without time zone, skin_upd_date timestamp without time zone, PRIMARY KEY (uuid))
SQL.CREATE.LOG.ERROR=CREATE TABLE IF NOT EXISTS log_err (log_date timestamp without time zone NOT NULL, place character varying(256), err_msg character varying(512), result character varying(1024), PRIMARY KEY (log_date))
SQL.CREATE.LOG.MATERIAL=CREATE TABLE IF NOT EXISTS log_mat (log_date timestamp without time zone NOT NULL, world character varying(32) NOT NULL, x integer NOT NULL, y integer NOT NULL, z integer NOT NULL, uuid character varying(64) NOT NULL, name character varying(32), simple_name character varying(32), type_name character varying(32), id integer, action character varying(32), result character varying(128), PRIMARY KEY (log_date, world, x, y, z, uuid))
SQL.CREATE.LOG.COMMAND=CREATE TABLE IF NOT EXISTS log_cmd (log_date timestamp without time zone NOT NULL, world character varying(32) NOT NULL, x integer NOT NULL, y integer NOT NULL, z integer NOT NULL, uuid character varying(64) NOT NULL, cmd character varying(32), arg1 character varying(64), arg2 character varying(64), arg3 character varying(64), arg4 character varying(64), arg5 character varying(64), arg6 character varying(64), arg7 character varying(64), action character varying(32), result character varying(128), PRIMARY KEY (log_date, world, x, y, z, uuid))
SQL.CREATE.LOG.SIGN=CREATE TABLE IF NOT EXISTS log_sign (log_date timestamp without time zone NOT NULL, world character varying(32) NOT NULL, x integer NOT NULL, y integer NOT NULL, z integer NOT NULL, uuid character varying(64) NOT NULL, line1 character varying(32), line2 character varying(32), line3 character varying(32), line4 character varying(32), PRIMARY KEY (log_date, world, x, y, z, uuid))
SQL.CREATE.LOG.PAY=CREATE TABLE IF NOT EXISTS log_pay (log_date timestamp without time zone NOT NULL, src character varying(64) NOT NULL, dst character varying(64), kind character varying(32), price integer NOT NULL, result character varying(128), PRIMARY KEY (log_date, src))
SQL.CREATE.LOG.MOB=CREATE TABLE IF NOT EXISTS log_mob (log_date timestamp without time zone NOT NULL, src character varying(64) NOT NULL, dst character varying(64) NOT NULL, exp integer NOT NULL, PRIMARY KEY (log_date, src, dst))
SQL.CREATE.CHEST=CREATE TABLE IF NOT EXISTS chest (world character varying(32) NOT NULL, x1 integer NOT NULL, y1 integer NOT NULL, z1 integer NOT NULL, x2 integer NOT NULL, y2 integer NOT NULL, z2 integer NOT NULL, type character varying(16) NOT NULL, mode character varying(16) NOT NULL, uuid character varying(64) NOT NULL, add_date timestamp without time zone NOT NULL, updater character varying(32) NOT NULL, upd_date timestamp without time zone NOT NULL, PRIMARY KEY (world, x1, y1, z1, x2, y2, z2))
SQL.CREATE.PRICE=CREATE TABLE IF NOT EXISTS price (name character varying(64),org_name character varying(64),price integer DEFAULT 0,uuid character varying(64) NOT NULL,add_date timestamp without time zone NOT NULL,updater character varying NOT NULL,upd_date timestamp without time zone NOT NULL,PRIMARY KEY (name))
SQL.CREATE.COMMAND=CREATE TABLE IF NOT EXISTS command (command character varying(32) NOT NULL, useage character varying(256), description character varying(512), rank integer NOT NULL, url character varying(64), PRIMARY KEY (command))
SQL.CREATE.AREA=CREATE TABLE IF NOT EXISTS area(world character varying(32) NOT NULL, x1 integer NOT NULL, y1 integer NOT NULL, z1 integer NOT NULL, x2 integer NOT NULL, y2 integer NOT NULL, z2 integer NOT NULL, name character varying(16) NOT NULL, uuid character varying(64) NOT NULL, owner character varying(32) NOT NULL, add_date timestamp without time zone NOT NULL, upd_date timestamp without time zone NOT NULL, PRIMARY KEY (world, x1, y1, z1, x2, y2, z2, name))

SQL.ERROR.INSERT=INSERT INTO log_err (log_date, place, err_msg, result) VALUES (current_timestamp, ?, ?, ?)
SQL.MATERIAL.INSERT=INSERT INTO log_mat (log_date, world, x, y, z, uuid, name, action, result) VALUES (current_timestamp, ?, ?, ?, ?, ?, ?, ?, ?)
SQL.COMMAND.INSERT=INSERT INTO log_cmd (log_date, world, x, y, z, uuid, cmd, arg1, arg2, arg3, arg4, arg5, arg6, arg7, action, result) VALUES (current_timestamp, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
SQL.SIGN.INSERT=INSERT INTO log_sign (log_date, world, x, y, z, uuid, line1, line2, line3, line4) VALUES (current_timestamp, ?, ?, ?, ?, ?, ?, ?, ?, ?)

SQL.LOGIN.INSERT.PLAYER=INSERT INTO player(uuid, name, rank, money, ip, host, rip, rhost, totalexp, exp, exptolevel, level, world, x, y, z, login, break, place, kill, death, kick, chat, cmd, play_time, add_date, upd_date) SELECT ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,current_timestamp,current_timestamp WHERE NOT EXISTS (SELECT 1 FROM player WHERE uuid =?)
SQL.LOGIN.UPDATE.PLAYER=UPDATE player SET ip=?, host=?, rip=?, rhost=?, login=login+1, status='LOGIN', upd_date=current_timestamp WHERE uuid=?

SQL.BREAK.UPDATE.PLAYER=UPDATE player SET break=(break+1), upd_date=current_timestamp WHERE uuid=?
SQL.PLACE.UPDATE.PLAYER=UPDATE player SET place=(place+1), upd_date=current_timestamp WHERE uuid=?
SQL.KILL.UPDATE.PLAYER=UPDATE player SET kill=(kill+1), upd_date=current_timestamp WHERE uuid=?
SQL.DEATH.UPDATE.PLAYER=UPDATE player SET death=(death+1), upd_date=current_timestamp WHERE uuid=?
SQL.KICK.UPDATE.PLAYER=UPDATE player SET kick=(kick+1), upd_date=current_timestamp WHERE uuid=?
SQL.CHAT.UPDATE.PLAYER=UPDATE player SET chat=(chat+1), upd_date=current_timestamp WHERE uuid=?
SQL.CMD.UPDATE.PLAYER=UPDATE player SET cmd=(cmd+1), upd_date=current_timestamp WHERE uuid=?
SQL.QUIT.UPDATE.PLAYER=UPDATE player SET last=current_timestamp, world=?, x=?, y=?, z=?, play_time=play_time+?, status='', upd_date=current_timestamp WHERE uuid=?
SQL.MOBKILL.UPDATE.PLAYER=UPDATE player SET mobkill=(COALESCE(mobkill,0)+1), upd_date=current_timestamp WHERE uuid=?
SQL.EXP.UPDATE.PLAYER=UPDATE player SET totalexp=?, upd_date=current_timestamp WHERE uuid=?
SQL.SKIN.UPDATE=UPDATE player SET skin_upd_date=current_timestamp WHERE uuid=?

SQL.NAME.UPDATE.PLAYER=UPDATE player SET nickname=?, upd_date=current_timestamp WHERE uuid=?
SQL.NAME.UPNULL.PLAYER=UPDATE player SET nickname=null, upd_date=current_timestamp WHERE uuid=?
SQL.NAME.CHECK.NAME=SELECT name FROM player WHERE LOWER(name)=? OR LOWER(nickname)=?
SQL.TAG.UPDATE.PLAYER=UPDATE player SET tag=?, upd_date=current_timestamp WHERE uuid=?
SQL.TAG.UPNULL.PLAYER=UPDATE player SET tag=null, upd_date=current_timestamp WHERE uuid=?

SQL.DISPLAY.PLAYER.NAME=SELECT COALESCE(nickname, name) dispname, COALESCE(tag, '') disptag FROM player WHERE uuid=?
SQL.PLAYER.RANK=SELECT rank FROM player WHERE uuid=?
SQL.PLAYER.MONEY=SELECT money FROM player WHERE uuid=?
SQL.PLAYER.TIME=SELECT rank, play_time FROM player WHERE uuid=?
SQL.PLAYER.PAYMODEY=UPDATE player SET money=money-? WHERE uuid=?
SQL.PLAYER.ADDMODEY=UPDATE player SET money=money+? WHERE uuid=?
SQL.PLAYER.UPDATE.LEVEL=UPDATE player SET level=? WHERE uuid=?
SQL.PLAYER.UPDATE.JYUMIN=UPDATE player SET rank=1 WHERE uuid=?

SQL.CHECK.ELAPSED_DAYS=SELECT uuid, elapse_days FROM v_elapse_days WHERE uuid=?

SQL.CHEST.LOCK.PERM=SELECT (break+place) cnt FROM player WHERE uuid=?
SQL.CHEST.INSERT=INSERT INTO chest(world, x1, y1, z1, x2, y2, z2, type, mode, uuid, add_date, updater, upd_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, current_timestamp, ?, current_timestamp)
SQL.CHEST.CHECK=SELECT * FROM chest WHERE world=? AND x1=? AND y1=? AND z1=? AND x2=? AND y2=? AND z2=?
SQL.CHEST.UPDATE.MODE=UPDATE chest SET mode=?, upd_date=current_timestamp WHERE world=? AND x1=? AND y1=? AND z1=? AND x2=? AND y2=? AND z2=?

SQL.PRICE.INSERT=INSERT INTO price(name, org_name, price, uuid, add_date, updater, upd_date) VALUES (?, ?, 0, 'none', current_timestamp, 'none', current_timestamp)
SQL.PRICE.UPDATE=UPDATE price SET price=?, uuid=?, updater=?, upd_date=current_timestamp WHERE name=?
SQL.PRICE.SELECT=SELECT name, org_name, price FROM price WHERE price > 0 AND name LIKE ? ORDER BY id, name

SQL.COMMAND.CHECKRANK=SELECT * FROM command WHERE command=?

SQL.INSERT.LOG.PAY=INSERT INTO log_pay(log_date, src, dst, kind, price, result) VALUES (current_timestamp, ?, ?, ?, ?, ?)
SQL.INSERT.LOG.MOB=INSERT INTO log_mob(log_date, src, dst, exp) VALUES (current_timestamp, ?, ?, ?)

SQL.CHECK.CHEST=SELECT world, x1, y1, z1, x2, y2, z2 FROM chest
SQL.DELETE.CHECT=DELETE FROM chest WHERE world=? AND x1=? AND y1=? AND z1=? AND x2=? AND y2=? AND z2=?
SQL.AREA.NAME.LIST=SELECT name FROM area WHERE uuid=? ORDER BY name
SQL.AREA.DELETE.NAME=DELETE FROM area WHERE uuid=? AND name=?
SQL.AREA.INSERT=INSERT INTO area(world, x1, y1, z1, x2, y2, z2, name, uuid, owner, add_date, upd_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, current_timestamp, current_timestamp)
SQL.AREAS=SELECT * FROM area ORDER BY name
SQL.AREAS.OWN=SELECT * FROM area WHERE uuid=? ORDER BY name
